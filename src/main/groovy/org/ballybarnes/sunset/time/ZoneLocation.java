package org.ballybarnes.sunset.time;

import java.time.ZoneId;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import org.apache.commons.lang3.tuple.ImmutablePair;
import org.apache.commons.lang3.tuple.Pair;

@AllArgsConstructor(access=AccessLevel.PRIVATE)
public enum ZoneLocation {

    EUROPE_LONDON(51.507222,-0.1275),
    EUROPE_BRUSSELS(50.85,4.35),
    EUROPE_WARSAW(52.229778,21.012222),
    EUROPE_JERSEY(49.194444,-2.133333),
    EUROPE_ISTANBUL(41.008333,28.966667),
    EUROPE_LUXEMBOURG(49.813611,6.133889),
    EUROPE_ZAPOROZHYE(47.833333,35.116667),
    EUROPE_GUERNSEY(49.45,-2.35),
    EUROPE_ISLE_OF_MAN(54.233333,-4.55),
    EUROPE_KALININGRAD(54.707222,20.5),
    EUROPE_BUCHAREST(44.431944,26.1),
    EUROPE_MALTA(35.908333,14.516667),
    EUROPE_BUSINGEN(47.648889,8.627778),
    EUROPE_SKOPJE(41.993333,21.42),
    EUROPE_SARAJEVO(43.823333,18.433333),
    EUROPE_ROME(41.89,12.49),
    EUROPE_MARIEHAMN(60.125,20.5),
    EUROPE_ZURICH(47.366667,8.55),
    EUROPE_SARATOV(51.516667,46),
    EUROPE_GIBRALTAR(36.138889,-5.344444),
    EUROPE_VADUZ(47.133333,9.516667),
    EUROPE_TIRASPOL(47.6,30.2),
    EUROPE_LJUBLJANA(46.05,14.583333),
    EUROPE_BERLIN(52.516667,13.416667),
    EUROPE_MOSCOW(55.75,37.616667),
    EUROPE_CHISINAU(47,28.833333),
    EUROPE_STOCKHOLM(59.324167,18.067778),
    EUROPE_BUDAPEST(47.497222,19.043056),
    EUROPE_ZAGREB(45.816667,15.95),
    EUROPE_HELSINKI(60.17,24.933333),
    EUROPE_PARIS(48.856778,2.35),
    EUROPE_SIMFEROPOL(44.933333,34.116667),
    EUROPE_SOFIA(42.716667,23.316667),
    EUROPE_PRAGUE(50.083333,14.416667),
    EUROPE_SAMARA(53.2,50.116667),
    EUROPE_COPENHAGEN(55.675,12.566667),
    EUROPE_VIENNA(48.208333,16.375),
    EUROPE_TIRANE(41.323333,19.816667),
    EUROPE_RIGA(57.133333,24.1),
    EUROPE_AMSTERDAM(52.374,4.894499),
    EUROPE_DUBLIN(53.3498,-6.2592),
    EUROPE_SAN_MARINO(43.9425,12.4841),
    EUROPE_UZHGOROD(48.583333,22.25),
    EUROPE_ANDORRA(42.5142,1.5009),
    EUROPE_LISBON(38.716667,-9.133333),
    EUROPE_OSLO(59.95,10.75),
    EUROPE_KIROV(58.583333,49.65),
    EUROPE_PODGORICA(42.433333,19.25),
    EUROPE_MINSK(53.9,27.566667),
    EUROPE_KIEV(50.45,30.516667),
    EUROPE_BELFAST(54.55,-5.933333),
    EUROPE_VILNIUS(54.683333,25.283333),
    EUROPE_MADRID(40.416667,-3.7),
    EUROPE_VOLGOGRAD(48.716667,44.516667),
    EUROPE_TALLINN(59.433333,24.716667),
    EUROPE_BELGRADE(44.816667,20.433333),
    EUROPE_ASTRAKHAN(46.416667,48.016667),
    EUROPE_KYIV(50.45,30.516667),
    EUROPE_BRATISLAVA(48.152116,17.107685),
    EUROPE_ULYANOVSK(54.349871,48.374179),
    EUROPE_VATICAN(41.902796,12.453914),
    EUROPE_NICOSIA(35.154722,33.333333),
    EUROPE_ATHENS(37.97922,23.716265),
    EUROPE_MONACO(43.723891,7.414275);

    private static final Map<String, ZoneLocation> zones = Arrays.stream(ZoneLocation.values()).collect(
        Collectors.toMap(it-> it.name().toUpperCase(), it2-> it2));

    final double latitude;
    final double longitude;


    public static ZoneLocation findLocationFromZone(ZoneId zoneId) {
        return zones.get(zoneId.getId().replace("/","_").toUpperCase());
    }
}

